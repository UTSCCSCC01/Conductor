server {
  listen 8080;

  #---Future: rename endpoints to /api/auth/<endpoints>
  location /auth {
    proxy_pass http://auth:3000;
  }

  location /auth-service {
    proxy_pass http://auth:3000;
  }

  location /verify-token {
    proxy_pass http://auth:3000;
  }

  location /register-useraccount{
    proxy_pass http://auth:3000;
  }
  #

  #--User device microservice.
  location /api/devices{
    proxy_pass http://devicelink:3007;
  }

  location /api/devices/addDevice{
    proxy_pass http://devicelink:3007;
  }

  location /api/devices/getAllDevices{
    proxy_pass http://devicelink:3007;
  }

  location /api/devices/getOneDevice{
    proxy_pass http://devicelink:3007;
  }

  location /api/device/syncApps{
    proxy_pass http://devicelink:3007;
  }


  location /api/devices/deleteOneDevice{
    proxy_pass http://devicelink:3007;
  }
  #---

  location /entry {
    proxy_pass http://dispatch-service:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    #proxy_hide_header 'Access-Control-Allow-Origin';
  }

  #--Dispatch microservice.


  #-- predicatemicroservice:
  location /api/predicates/addPredicate {
    proxy_pass http://predicatemicroservice:3014;
  }
  location /api/predicates/updatePredicate {
    proxy_pass http://predicatemicroservice:3014;
  }
  location /api/predicates/deletePredicate/ {
    proxy_pass http://predicatemicroservice:3014;
  }
  location /api/predicates/satisfyPredicate/ {
    proxy_pass http://predicatemicroservice:3014$uri;
  }

  location /api/predicates/getViaId {
    proxy_pass http://predicatemicroservice:3014$uri;
  }
  location /api/predicates/getViaUserId {
    proxy_pass http://predicatemicroservice:3014$uri;
  }

  location /api/predicates/deleteAllPredicates {
    proxy_pass http://predicatemicroservice:3014;
  }

  location /api/predicates/deletePredicateViaEvent {
    proxy_pass http://predicatemicroservice:3014;
  }

  #--Event builder microservice.
  location /api/eventbuilder {
    proxy_pass http://eventbuilderlink:3008;
  }

  location /api/eventbuilder/addEvent {
    proxy_pass http://eventbuilderlink:3008;
  }

  location /api/eventbuilder/getUserEvents {
    proxy_pass http://eventbuilderlink:3008;
  }

  location /api/eventbuilder/getAll {
    proxy_pass http://eventbuilderlink:3008;
  }

  location /api/eventbuilder/deleteUserEvent/ {
    proxy_pass http://eventbuilderlink:3008;
  }  
  #---

}